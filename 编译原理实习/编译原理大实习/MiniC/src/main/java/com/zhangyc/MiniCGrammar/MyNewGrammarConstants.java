package com.zhangyc.MiniCGrammar;

/* Generated By:JJTree&JavaCC: Do not edit this line. MyNewGrammarConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyNewGrammarConstants {

    /** End of File. */
    int EOF = 0;
    /** RegularExpression Id. */
    int INTEGER_LITERAL = 7;
    /** RegularExpression Id. */
    int DECIMAL_LITERAL = 8;
    /** RegularExpression Id. */
    int HEX_LITERAL = 9;
    /** RegularExpression Id. */
    int OCTAL_LITERAL = 10;
    /** RegularExpression Id. */
    int IF = 11;
    /** RegularExpression Id. */
    int ELSE = 12;
    /** RegularExpression Id. */
    int INT = 13;
    /** RegularExpression Id. */
    int RETURN = 14;
    /** RegularExpression Id. */
    int VOID = 15;
    /** RegularExpression Id. */
    int WHILE = 16;
    /** RegularExpression Id. */
    int CHAR = 17;
    /** RegularExpression Id. */
    int FLOAT = 18;
    /** RegularExpression Id. */
    int DOUBLE = 19;
    /** RegularExpression Id. */
    int MAIN = 20;
    /** RegularExpression Id. */
    int FOR = 21;
    /** RegularExpression Id. */
    int FEI = 22;
    /** RegularExpression Id. */
    int HUO = 23;
    /** RegularExpression Id. */
    int YU = 24;
    /** RegularExpression Id. */
    int SWITCH = 25;
    /** RegularExpression Id. */
    int CASE = 26;
    /** RegularExpression Id. */
    int MINIDEFAULT = 27;
    /** RegularExpression Id. */
    int DO = 28;
    /** RegularExpression Id. */
    int IDENTIFIER = 29;
    /** RegularExpression Id. */
    int LETTER = 30;
    /** RegularExpression Id. */
    int DIGIT = 31;
    /** RegularExpression Id. */
    int COMMA = 32;
    /** RegularExpression Id. */
    int SEM = 33;
    /** RegularExpression Id. */
    int LFBRACKET = 34;
    /** RegularExpression Id. */
    int RFBRACKET = 35;
    /** RegularExpression Id. */
    int LBRACKET = 36;
    /** RegularExpression Id. */
    int RBRACKET = 37;
    /** RegularExpression Id. */
    int LRBRACKET = 38;
    /** RegularExpression Id. */
    int RRBRACKET = 39;
    /** RegularExpression Id. */
    int ADD = 40;
    /** RegularExpression Id. */
    int MUL = 41;
    /** RegularExpression Id. */
    int MINUS = 42;
    /** RegularExpression Id. */
    int DIVISOR = 43;
    /** RegularExpression Id. */
    int LESSTHAN = 44;
    /** RegularExpression Id. */
    int GREATERTHAN = 45;
    /** RegularExpression Id. */
    int EQUAL = 46;
    /** RegularExpression Id. */
    int FLOAT_LITERAL = 47;

    /** Lexical state. */
    int DEFAULT = 0;

    /** Literal token values. */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\n\"",
            "\"\\r\"",
            "<token of kind 5>",
            "<token of kind 6>",
            "<INTEGER_LITERAL>",
            "<DECIMAL_LITERAL>",
            "<HEX_LITERAL>",
            "<OCTAL_LITERAL>",
            "\"if\"",
            "\"else\"",
            "\"int\"",
            "\"return\"",
            "\"void\"",
            "\"while\"",
            "\"char\"",
            "\"float\"",
            "\"double\"",
            "\"main\"",
            "\"for\"",
            "\"!\"",
            "\"||\"",
            "\"&&\"",
            "\"switch\"",
            "\"case\"",
            "\"default\"",
            "\"do\"",
            "<IDENTIFIER>",
            "<LETTER>",
            "<DIGIT>",
            "\",\"",
            "\";\"",
            "\"{\"",
            "\"}\"",
            "\"[\"",
            "\"]\"",
            "\"(\"",
            "\")\"",
            "\"+\"",
            "\"*\"",
            "\"-\"",
            "\"/\"",
            "\"<\"",
            "\">\"",
            "\"=\"",
            "<FLOAT_LITERAL>",
            "\"++\"",
            "\"--\"",
            "\":\"",
            "\"<=\"",
            "\">=\"",
            "\"==\"",
            "\"!=\"",
            "\"%\"",
    };

}

